// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        String   @id @default(uuid())
  email     String   @unique
  phone     String   @unique
  name      String
  role      Role     @default(USER)
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart?
  order     Order?
}

model Cart {
  id        String     @id @default(uuid())
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  user      User       @relation(fields: [userId], references: [id])
  total     Decimal
  userId    String      @unique
  items     CartItem[]
}

model CartItem {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    String
  menu      Menu    @relation(fields: [menuId], references: [id])
  menuId    String   @unique
}

model Menu {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  name        String
  price       Decimal
  image       String
  description String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
  cartItem    CartItem?
  orderItem   OrderItem?
}

model Category {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  menus     Menu[]
}

model Order {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String    @unique
  items     OrderItem[]
  payment   Payment?
  paymentId String
}

model Payment {
  id String @id @default(uuid())
  order Order @relation(fields: [orderId], references: [id])
  orderId String @unique
  status String
  method String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model OrderItem {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   String
  menu      Menu     @relation(fields: [menuId], references: [id])
  menuId    String   @unique
}
